"""
Created on Sat Aug 10 23:24:16 2019

@author: sola
"""



"The arange function is similar to the range function but returns an array:"
"input"
np.arange(5, dtype=float)

"output"
([ 0., 1., 2., 3., 4.])


"input"
 np.arange(1, 6, 2, dtype=int)
 
 "output"
 array([1, 3, 5])
 
 
 "The functions zeros and ones create new arrays of specified dimensions filled with these
values. These are perhaps the most commonly used functions to create new arrays:"

"input"
np.ones((2,3), dtype=float)

"output"
([[ 1., 1., 1.],
 [ 1., 1., 1.]])
 
 "input"
 np.zeros(7, dtype=int)
 
 "output"
 ([0, 0, 0, 0, 0, 0, 0])
 
 
 "The zeros_like and ones_like functions create a new array with the same dimensions
and type of an existing one:"

"input"
 a = np.array([[1, 2, 3], [4, 5, 6]], float)
 np.zeros_like(a)
 
 "output"
 ([[ 0., 0., 0.],
 [ 0., 0., 0.]])
 
 "input"
 np.ones_like(a)
 
 "output"
 ([[ 1., 1., 1.],
 [ 1., 1., 1.]])
 
 
 
 "There are also a number of functions for creating special matrices (2D arrays). To create an
identity matrix of a given size,"

"input"
 np.identity(4, dtype=float)
 
 "output"
 ([[ 1., 0., 0., 0.],
 [ 0., 1., 0., 0.],
 [ 0., 0., 1., 0.],
 [ 0., 0., 0., 1.]])
 
 "The eye function returns matrices with ones along the kth diagonal:"
 "input"
  np.eye(4, k=1, dtype=float)
  
  "output"
  ([[ 0., 1., 0., 0.],
   [ 0., 0., 1., 0.],
   [ 0., 0., 0., 1.],
   [ 0., 0., 0., 0.]])
